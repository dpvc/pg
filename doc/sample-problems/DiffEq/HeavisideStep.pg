## DESCRIPTION
## Differential Equations: adding the Heaviside function to the context.
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('differential equations', 'adding the Heaviside function to the context')

#:% categories=[differential equations]
#:% section=preamble
#: We load parserFunction.pl to make adding a named function to the context easier.
#: Please see the POD documentation `parserFunction.pl`.
DOCUMENT();

loadMacros("PGstandard.pl", "MathObjects.pl", "AnswerFormatHelp.pl", "parserFunction.pl", "PGML.pl", "PGcourse.pl");

TEXT(beginproblem());

#:% section=setup
#: We add the step function to the context with the name `step`. The function `step(t)` is
#: the Heaviside function and takes the value 1 when t > 0, and the value 0 when
#: t &leq; 0. We will use the function `step` when evaluating the Heaviside function to
#: obtain an answer that is a number.
#:
#: For more details on adding the Heaviside function to the context, see the forum
#: discussion on the
#: <a href="https://webwork.maa.org/moodle/mod/forum/discuss.php?d=458">
#: Heaviside step function</a>.
Context("Numeric");
Context()->variables->are(t => "Real");
Context()->functions->add(
	step => {
		class => 'Parser::Legacy::Numeric',
		perl  => 'Parser::Legacy::Numeric::do_step'
	},
);

parserFunction("u(t)" => "step(t)");

$a = 3;

$f = Formula("5 u(t-$a)");

$answer1 = List($f->eval(t => 2), $f->eval(t => 3), $f->eval(t => 4));

$answer2 = $f->with(
	limits     => [ $a - 5,     $a + 5 ],
	test_at    => [ [ $a - 1 ], [ $a - 0.0000001 ], [$a], [ $a + 0.0000001 ], [ $a + 1 ] ],
	num_points => 10,
);

#:% section=statement
BEGIN_PGML
Let [` u(t) `] be the Heaviside step function defined by
[` \displaystyle
u(t) =
\left\lbrace
\begin{array}{lcl}
0 && \mbox{ if } x \leq 0, \\
1 && \mbox{ if } x > 0.
\end{array}
\right.
`]

a. Evaluate the function [` [$f] `] when [` t `] is [` 2 `], [` 3 `], and [` 4 `] and enter your answers as a comma separated list.

    + [________________]{ $answer1->cmp(ordered=>1) } [@ AnswerFormatHelp("numbers") @]*

b. Suppose the answer is the function [` [$f] `].

    + [________________]{ $answer2 } [@ AnswerFormatHelp("formulas") @]*
END_PGML

#:% section=solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
