## DESCRIPTION
## scaffolding template
## ENDDESCRIPTION

## KEYWORDS('scaffold','scaffolding', 'sequentially revealed')

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)

#:preamble:begin
#:preamble:code
DOCUMENT();

loadMacros('PGstandard.pl','MathObjects.pl','scaffold.pl','PGML.pl','PGcourse.pl');
TEXT(beginproblem());
#:preamble:end

#:setup:begin
#:setup:code
Context('Numeric');
#:setup:end


################
#  Main text

#:statement:begin
#:Each `Section::Begin()` and `Section::End()` block can have its own context, etc.
#:See the scaffold.pl macro file for Scaffold options.
#:statement:code
Scaffold::Begin();

Section::Begin("Part 1: The first part");
BEGIN_PGML
This is the text for part 1.  [` 1+1 = `] [_________]{'2'}
END_PGML
Section::End();

Section::Begin("Part 2: The second part");
BEGIN_PGML
This is text for the second part.  [` 2 * 2 = `] [_________]{'4'}
END_PGML
Section::End();

Section::Begin("Part 3: The third part");
BEGIN_PGML
This is text for the third part.  [` 1 + 2 + 4 = `] [_________]{'7'}
END_PGML
Section::End();

Scaffold::End();
#:statement:end

#################
#  Solution

#:solution:begin
#:solution:code
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
#:solution:end