## DESCRIPTION
## domain and range of a function
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('precalculus', 'domain and range using inequalities')

#:% name = Domain and Range of a Function
#:% subject = [precalculus]
#:% type = Sample
#:% categories=[domain]

#:% section=preamble
#: We use the macro `contextInequalities.pl`.
DOCUMENT();

loadMacros('PGstandard.pl', 'PGML.pl', 'contextInequalities.pl', 'PGcourse.pl');

#:% section=setup
#: For the first part, We specify the context in a way that requires students to enter
#: their answer using inequalities and the variable x. If we had used `Context("Inequalities")`
#: instead, then students would also be able to enter answers using interval notation. For more
#: details, please see `contextInequalities.pl`
#:
#: We use `formatStudentAnswer=>'parsed'` and `Compute()` so that the student's answer are left
#: as fractions rather than reduced to decimals.
#:
#: For the domain, since the variable is now y, we must reset the context and the variable so
#: that students must enter the variable y in their answer.
#:
#: For the second part, we use Intervals instead, so we switch contexts with the
#: `Context('Interval')`. Note that `inf` is built-in for infinte intervals.
$a=random(1,6);
$f = Compute("sqrt(x-[$a])");

Context('Inequalities-Only')->variables->are(x => 'Real');
Context()->flags->set(formatStudentAnswer => 'parsed');

$domain = Compute("x >= $a");

Context("Inequalities-Only")->variables->are(y => 'Real');
Context()->flags->set(formatStudentAnswer => 'parsed');

$range = Compute("y >= 0");

# interval version of the same domain/range
Context('Interval');
$domain_interval = Compute("[$a,inf)");
$range_interval = Compute("[0,inf)");


#:% section=statement
BEGIN_PGML
Suppose [` f(x) = [$f] `] . Enter inequalities for the domain and range of [` f `] .

Domain: [_________________]{$domain}

Range: [_________________]{$range}

Using interval notation, find the following:

Domain: [____]{$domain_interval}

Range: [____]{$range_interval}
END_PGML

#:% section=solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
