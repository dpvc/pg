## DESCRIPTION
## Precalculus: answer could be a string or another data type
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('precalculus', 'answer is a string or other data type')

#:% name = String or Other Type
#:% subject = [algebra, precalculus]
#:% type = Sample

#:% section=preamble
DOCUMENT();

loadMacros('PGstandard.pl', 'PGML.pl', 'PGcourse.pl');

#:% section=setup
#: There are several predefined strings, such as NONE, DNE, INF, INFINITY. If you
#: need another string added to the context, see strings in context.
#:
#: When `$answer = Formula("2*x")` and a student enters the string `NONE`, they will
#: not get any error message because when the answer checker expects a formula and
#: gets a string it is set up not to balk. However, when `$answer = String("none")`
#: and a student enters the formula `2x`, they will get an error message. This is
#: because the answer checker is expecting a string and gets a formula, and when
#: this happens it balks. We must use `typeMatch=>Formula("x")` so that in the event
#: the answer is a string, no error message will appear.
Context('Numeric');

$y = random(0, 4, 1);

$ans = $y < 4 ? String('none')->cmp(typeMatch => Formula('x')) :
	Formula("2*x")->cmp(typeMatch => Formula('x'));

#:% section=statement
BEGIN_PGML
Is there a line through the points [` (0,0) `], [` (1,2) `], and [` (2,[$y]) `]?
If there is, enter the equation for this line . If not, enter _NONE_.

[` y = `] [_______________]{$ans}
END_PGML

#:% section=solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
