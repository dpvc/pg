## DESCRIPTION
## Sequences: answer is an ordered list
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('integral calculus', 'answer is an ordered list')

#:% categories=[sequence]
#:% section=preamble
DOCUMENT();

loadMacros('PGstandard.pl','PGML.pl','PGcourse.pl');

TEXT(beginproblem());

#:% section=setup
#: We create an empty array `@seq` and then fill it with scalars using direct assignment
#: and a `for` loop. Since the entries in the array `@seq` do not have commas between
#: them, we create a Perl string `$answer` that joins the entries of the array `@seq` by
#: a comma followed by a space ", ". Then, we make this string a MathObject by
#: putting `Compute()` around it.
#:
#: Since the answer is a MathObject `List`, which is by default unordered, we must
#: specify that the answer checker use `ordered=>1`.
Context('Numeric');

@seq = ();
$seq[0] = 1;
$seq[1] = 1;
for $i (2..6) {
  $seq[$i] = $seq[$i-1] + $seq[$i-2];
}

$answer_string = join(", ",@seq);
$answer_cmp = Compute("$answer_string")->cmp(ordered=>1);

#:% section=statement
BEGIN_PGML
If [` s_1 = [$seq[0]] `], [` s_2 = [$seq[1]] `], and
[` s_n = s_{n-1} + s_{n-2} `], find the first seven
terms of this sequence, including [` s_1 `] and
[` s_2 `].  Enter your answer as a comma separated
list of numbers.

Sequence = [___________________]{$answer_cmp}
END_PGML

#:% section=solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
